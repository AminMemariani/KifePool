name: Integration Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        flutter-version: ['3.8.1', '3.10.0']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ matrix.flutter-version }}
        channel: 'stable'
        
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Generate code
      run: dart run build_runner build --delete-conflicting-outputs
      
    - name: Verify formatting
      run: dart format --output=none --set-exit-if-changed .
      
    - name: Analyze code
      run: flutter analyze
      
    - name: Run unit tests
      run: flutter test
      
    - name: Run integration tests
      run: flutter test integration_test/ --timeout 120s
      
    - name: Generate coverage report
      run: flutter test integration_test/ --coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info
        flags: integration-tests
        name: integration-tests-${{ matrix.flutter-version }}
        
    - name: Archive test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.flutter-version }}
        path: |
          coverage/
          test/
        retention-days: 30

  integration-tests-android:
    runs-on: ubuntu-latest
    needs: integration-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.8.1'
        channel: 'stable'
        
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
      
    - name: Install dependencies
      run: flutter pub get
      
    - name: Generate code
      run: dart run build_runner build --delete-conflicting-outputs
      
    - name: Run Android integration tests
      run: flutter test integration_test/ --platform android --timeout 120s
      
    - name: Build Android APK
      run: flutter build apk --debug
      
    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      with:
        name: android-debug-apk
        path: build/app/outputs/flutter-apk/app-debug.apk
        retention-days: 7

  integration-tests-ios:
    runs-on: macos-latest
    needs: integration-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.8.1'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Generate code
      run: dart run build_runner build --delete-conflicting-outputs
      
    - name: Run iOS integration tests
      run: flutter test integration_test/ --platform ios --timeout 120s
      
    - name: Build iOS app
      run: flutter build ios --debug --no-codesign
      
    - name: Upload iOS build artifact
      uses: actions/upload-artifact@v3
      with:
        name: ios-debug-build
        path: build/ios/iphoneos/Runner.app
        retention-days: 7

  integration-tests-web:
    runs-on: ubuntu-latest
    needs: integration-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.8.1'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Generate code
      run: dart run build_runner build --delete-conflicting-outputs
      
    - name: Run Web integration tests
      run: flutter test integration_test/ --platform web --timeout 120s
      
    - name: Build Web app
      run: flutter build web
      
    - name: Upload Web build artifact
      uses: actions/upload-artifact@v3
      with:
        name: web-build
        path: build/web/
        retention-days: 7

  performance-tests:
    runs-on: ubuntu-latest
    needs: integration-tests
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.8.1'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Generate code
      run: dart run build_runner build --delete-conflicting-outputs
      
    - name: Run performance tests
      run: |
        echo "Running performance tests..."
        flutter test integration_test/ --timeout 300s --verbose
        echo "Performance tests completed"
        
    - name: Generate performance report
      run: |
        echo "Generating performance report..."
        # Add performance metrics collection here
        echo "Performance report generated"
